apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "networth-dashboard.fullname" . }}-frontend-nginx-config
  labels:
    {{- include "networth-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  nginx.conf: |
    pid /tmp/nginx.pid;
    events {
        worker_connections 1024;
    }

    http {
        client_body_temp_path /tmp/nginx_client_temp;
        proxy_temp_path /tmp/nginx_proxy_temp;
        fastcgi_temp_path /tmp/nginx_fastcgi_temp;
        uwsgi_temp_path /tmp/nginx_uwsgi_temp;
        scgi_temp_path /tmp/nginx_scgi_temp;
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;

        # Server configuration
        server {
            listen {{ .Values.frontend.service.port }};
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;

            # API proxy to backend
            location /api/ {
                proxy_pass http://{{ include "networth-dashboard.fullname" . }}-backend:{{ .Values.backend.service.port }}/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # CORS headers
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                
                # Handle preflight requests
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin *;
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                    add_header Content-Length 0;
                    add_header Content-Type text/plain;
                    return 200;
                }
            }

            # Swagger UI proxy to backend
            location /swagger/ {
                proxy_pass http://{{ include "networth-dashboard.fullname" . }}-backend:{{ .Values.backend.service.port }}/swagger/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Health check proxy to backend
            location /health {
                proxy_pass http://{{ include "networth-dashboard.fullname" . }}-backend:{{ .Values.backend.service.port }}/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Serve static files
            location / {
                try_files $uri $uri/ /index.html;
                
                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }

            # Error pages
            error_page 404 /index.html;
            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    }
